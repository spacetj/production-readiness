apiVersion: v1
data:
  PORSTGRES_USER: YWRtaW4=
  POSTGRES_DB: cG9zdGdyZXNkYg==
  POSTGRES_PASSWORD: YWRtaW4xMjM=
kind: Secret
metadata:
  creationTimestamp: null
  name: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /docker-entrypoint-initdb.d/
              name: postgres-init
      volumes:
        - name: postgredb
          emptyDir: {}
        - name: postgres-init
          configMap:
            name: init-script
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
   app: postgres
---
apiVersion: v1
data:
  bootstrap.sql: |
    CREATE USER demo WITH PASSWORD '1234';
    CREATE DATABASE tasks OWNER demo;
    \connect tasks;
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE TABLE IF NOT EXISTS Tasks(id UUID PRIMARY KEY NOT NULL DEFAULT uuid_generate_v4(), name text);
    ALTER TABLE Tasks OWNER TO demo;
    INSERT INTO Tasks VALUES ('8f68de23-b85a-42e9-a0f1-bf100755d865', 'task1');
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: init-script
